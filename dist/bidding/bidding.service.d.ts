import { PrismaService } from '../prisma/prisma.service';
import { CreateBidDto, BidStatus } from './dto/create-bid.dto';
import { UpdateBidDto } from './dto/update-bid.dto';
import { HelperService } from '../shared/helper.service';
import { EmailService } from '../email/email.service';
interface BidFilters {
    bookingId?: string;
    bidderId?: string;
    carrierId?: string;
    status?: BidStatus;
    minAmount?: number;
    maxAmount?: number;
    currency?: string;
}
interface BidOptions {
    page: number;
    limit: number;
    sortBy: string;
    sortOrder: 'asc' | 'desc';
}
export declare class BiddingService {
    private readonly prisma;
    private readonly helperService;
    private readonly emailService;
    constructor(prisma: PrismaService, helperService: HelperService, emailService: EmailService);
    create(createBidDto: CreateBidDto): Promise<{
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
        booking: {
            description: string;
            referenceNumber: string | null;
            pickupLocation: import("@prisma/client/runtime/library").JsonValue;
            deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
            contactPerson: string;
            contactPhone: string;
            urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
            preferredPickupTime: Date;
            proposedPrice: number;
            expiresAt: Date | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            shipperId: string;
            cargoDetails: import("@prisma/client/runtime/library").JsonValue;
            preferredTruckType: string;
            latestPickupTime: Date | null;
            requiredDeliveryTime: Date | null;
            loadingType: string;
            unloadingType: string;
            minimumPrice: number | null;
            maximumPrice: number | null;
            isNegotiable: boolean;
            additionalRequirements: string | null;
            requiredServices: string[];
            notificationsEnabled: boolean;
            isRecurring: boolean;
            recurrencePattern: string | null;
            acceptedBidId: string | null;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    findAll(filters: BidFilters, options: BidOptions): Promise<{
        bids: ({
            carrier: {
                description: string | null;
                companyName: string;
                contactPhone: string;
                contactFirstName: string;
                contactLastName: string;
                userId: string;
                registrationNumber: string | null;
                taxId: string | null;
                businessEmail: string;
                phoneNumber: string;
                website: string | null;
                companySize: import(".prisma/client").$Enums.CompanySize;
                street: string;
                city: string;
                state: string;
                postalCode: string;
                countryCode: string;
                contactJobTitle: string;
                contactEmail: string;
                operatingRegions: string | null;
                marketingOptIn: boolean;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                isVerified: boolean;
                fleetSize: string | null;
                rating: number | null;
                completedJobs: number;
            };
            booking: {
                description: string;
                referenceNumber: string | null;
                pickupLocation: import("@prisma/client/runtime/library").JsonValue;
                deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
                contactPerson: string;
                contactPhone: string;
                urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
                preferredPickupTime: Date;
                proposedPrice: number;
                expiresAt: Date | null;
                status: import(".prisma/client").$Enums.BookingStatus;
                currency: string;
                contactEmail: string | null;
                id: string;
                createdAt: Date;
                updatedAt: Date;
                shipperId: string;
                cargoDetails: import("@prisma/client/runtime/library").JsonValue;
                preferredTruckType: string;
                latestPickupTime: Date | null;
                requiredDeliveryTime: Date | null;
                loadingType: string;
                unloadingType: string;
                minimumPrice: number | null;
                maximumPrice: number | null;
                isNegotiable: boolean;
                additionalRequirements: string | null;
                requiredServices: string[];
                notificationsEnabled: boolean;
                isRecurring: boolean;
                recurrencePattern: string | null;
                acceptedBidId: string | null;
            };
        } & {
            message: string | null;
            bookingId: string;
            contactPerson: string;
            contactPhone: string;
            bidAmount: number;
            proposedPickupTime: Date;
            estimatedDeliveryTime: Date;
            status: import(".prisma/client").$Enums.BidStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isNegotiable: boolean;
            carrierId: string;
            truckDetails: import("@prisma/client/runtime/library").JsonValue;
            driverDetails: import("@prisma/client/runtime/library").JsonValue;
            includedServices: string[];
            bidExpiresAt: Date | null;
            paymentTerms: string | null;
            specialTerms: string | null;
            minimumAcceptablePrice: number | null;
            documentationUrl: string | null;
        })[];
        total: number;
    }>;
    findOne(id: string): Promise<{
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
        booking: {
            description: string;
            referenceNumber: string | null;
            pickupLocation: import("@prisma/client/runtime/library").JsonValue;
            deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
            contactPerson: string;
            contactPhone: string;
            urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
            preferredPickupTime: Date;
            proposedPrice: number;
            expiresAt: Date | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            shipperId: string;
            cargoDetails: import("@prisma/client/runtime/library").JsonValue;
            preferredTruckType: string;
            latestPickupTime: Date | null;
            requiredDeliveryTime: Date | null;
            loadingType: string;
            unloadingType: string;
            minimumPrice: number | null;
            maximumPrice: number | null;
            isNegotiable: boolean;
            additionalRequirements: string | null;
            requiredServices: string[];
            notificationsEnabled: boolean;
            isRecurring: boolean;
            recurrencePattern: string | null;
            acceptedBidId: string | null;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    update(id: string, updateBidDto: UpdateBidDto): Promise<{
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
        booking: {
            description: string;
            referenceNumber: string | null;
            pickupLocation: import("@prisma/client/runtime/library").JsonValue;
            deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
            contactPerson: string;
            contactPhone: string;
            urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
            preferredPickupTime: Date;
            proposedPrice: number;
            expiresAt: Date | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            shipperId: string;
            cargoDetails: import("@prisma/client/runtime/library").JsonValue;
            preferredTruckType: string;
            latestPickupTime: Date | null;
            requiredDeliveryTime: Date | null;
            loadingType: string;
            unloadingType: string;
            minimumPrice: number | null;
            maximumPrice: number | null;
            isNegotiable: boolean;
            additionalRequirements: string | null;
            requiredServices: string[];
            notificationsEnabled: boolean;
            isRecurring: boolean;
            recurrencePattern: string | null;
            acceptedBidId: string | null;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    remove(id: string): Promise<{
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    getStatistics(userId: string): Promise<{
        totalBids: number;
        pendingBids: number;
        acceptedBids: number;
        rejectedBids: number;
        cancelledBids: number;
        averageBidAmount: number;
        userBidCount: number;
    }>;
    createBid(createBidDto: CreateBidDto): Promise<{
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
        booking: {
            description: string;
            referenceNumber: string | null;
            pickupLocation: import("@prisma/client/runtime/library").JsonValue;
            deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
            contactPerson: string;
            contactPhone: string;
            urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
            preferredPickupTime: Date;
            proposedPrice: number;
            expiresAt: Date | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            shipperId: string;
            cargoDetails: import("@prisma/client/runtime/library").JsonValue;
            preferredTruckType: string;
            latestPickupTime: Date | null;
            requiredDeliveryTime: Date | null;
            loadingType: string;
            unloadingType: string;
            minimumPrice: number | null;
            maximumPrice: number | null;
            isNegotiable: boolean;
            additionalRequirements: string | null;
            requiredServices: string[];
            notificationsEnabled: boolean;
            isRecurring: boolean;
            recurrencePattern: string | null;
            acceptedBidId: string | null;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    getBidsByBookingId(bookingId: string): Promise<({
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    })[]>;
    getBidById(bidId: string): Promise<{
        carrier: {
            description: string | null;
            companyName: string;
            contactPhone: string;
            contactFirstName: string;
            contactLastName: string;
            userId: string;
            registrationNumber: string | null;
            taxId: string | null;
            businessEmail: string;
            phoneNumber: string;
            website: string | null;
            companySize: import(".prisma/client").$Enums.CompanySize;
            street: string;
            city: string;
            state: string;
            postalCode: string;
            countryCode: string;
            contactJobTitle: string;
            contactEmail: string;
            operatingRegions: string | null;
            marketingOptIn: boolean;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            isVerified: boolean;
            fleetSize: string | null;
            rating: number | null;
            completedJobs: number;
        };
        booking: {
            description: string;
            referenceNumber: string | null;
            pickupLocation: import("@prisma/client/runtime/library").JsonValue;
            deliveryLocation: import("@prisma/client/runtime/library").JsonValue;
            contactPerson: string;
            contactPhone: string;
            urgencyLevel: import(".prisma/client").$Enums.UrgencyLevel;
            preferredPickupTime: Date;
            proposedPrice: number;
            expiresAt: Date | null;
            status: import(".prisma/client").$Enums.BookingStatus;
            currency: string;
            contactEmail: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            shipperId: string;
            cargoDetails: import("@prisma/client/runtime/library").JsonValue;
            preferredTruckType: string;
            latestPickupTime: Date | null;
            requiredDeliveryTime: Date | null;
            loadingType: string;
            unloadingType: string;
            minimumPrice: number | null;
            maximumPrice: number | null;
            isNegotiable: boolean;
            additionalRequirements: string | null;
            requiredServices: string[];
            notificationsEnabled: boolean;
            isRecurring: boolean;
            recurrencePattern: string | null;
            acceptedBidId: string | null;
        };
    } & {
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
    updateBidStatus(bidId: string, status: string): Promise<{
        message: string | null;
        bookingId: string;
        contactPerson: string;
        contactPhone: string;
        bidAmount: number;
        proposedPickupTime: Date;
        estimatedDeliveryTime: Date;
        status: import(".prisma/client").$Enums.BidStatus;
        currency: string;
        contactEmail: string | null;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        isNegotiable: boolean;
        carrierId: string;
        truckDetails: import("@prisma/client/runtime/library").JsonValue;
        driverDetails: import("@prisma/client/runtime/library").JsonValue;
        includedServices: string[];
        bidExpiresAt: Date | null;
        paymentTerms: string | null;
        specialTerms: string | null;
        minimumAcceptablePrice: number | null;
        documentationUrl: string | null;
    }>;
}
export {};
